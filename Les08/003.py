"""3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
Класс-исключение должен контролировать типы данных элементов списка.

Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу
скрипта, введя, например, команду “stop”. При этом скрипт завершается, сформированный список выводится на экран.

Подсказка: для данного задания примем, что пользователь может вводить только числа и строки. При вводе пользователем
очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться."""


class NotNumberError(Exception):
    def __str__(self):
        return 'Это не число'


def isnumber(v):
    if not min(map(lambda x: x.isdigit(), v)):
        raise NotNumberError


res_list = list()
in_str = input('Введите число: ')
while in_str != 'stop':
    try:
        isnumber(in_str)
    except NotNumberError as err:
        print(err)
    else:
        res_list.append(in_str)
    in_str = input('Введите число: ')
print(res_list)
